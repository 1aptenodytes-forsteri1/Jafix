{"ast":null,"code":"// src/authService.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8080/users'; // Замените на URL вашего сервера\n\nexport const registerUser = async userDetails => {\n  try {\n    const response = await axios.post(`${API_URL}`, userDetails);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error(\"Registration error:\", error.response || error.message || error);\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed');\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}`, credentials);\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error(\"Login error:\", error.response || error.message || error);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed');\n  }\n};","map":{"version":3,"names":["axios","API_URL","registerUser","userDetails","response","post","data","error","_error$response","_error$response$data","console","message","Error","loginUser","credentials","_error$response2","_error$response2$data"],"sources":["D:/Учёба/Диплом/Jafix/my-app/src/authService.js"],"sourcesContent":["// src/authService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/users'; // Замените на URL вашего сервера\r\n\r\nexport const registerUser = async (userDetails) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}`, userDetails);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Registration error:\", error.response || error.message || error);\r\n    throw new Error(error.response?.data?.message || 'Registration failed');\r\n  }\r\n};\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}`, credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.response || error.message || error);\r\n    throw new Error(error.response?.data?.message || 'Login failed');\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B,CAAC,CAAC;;AAE/C,OAAO,MAAMC,YAAY,GAAG,MAAOC,WAAW,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,OAAQ,EAAC,EAAEE,WAAW,CAAC;IAC5D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACdC,OAAO,CAACH,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACI,OAAO,IAAIJ,KAAK,CAAC;IAC9E,MAAM,IAAIK,KAAK,CAAC,EAAAJ,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,qBAAqB,CAAC;EACzE;AACF,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAE,GAAEJ,OAAQ,EAAC,EAAEa,WAAW,CAAC;IAC5D,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAQ,gBAAA,EAAAC,qBAAA;IACdN,OAAO,CAACH,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACI,OAAO,IAAIJ,KAAK,CAAC;IACvE,MAAM,IAAIK,KAAK,CAAC,EAAAG,gBAAA,GAAAR,KAAK,CAACH,QAAQ,cAAAW,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBT,IAAI,cAAAU,qBAAA,uBAApBA,qBAAA,CAAsBL,OAAO,KAAI,cAAc,CAAC;EAClE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}