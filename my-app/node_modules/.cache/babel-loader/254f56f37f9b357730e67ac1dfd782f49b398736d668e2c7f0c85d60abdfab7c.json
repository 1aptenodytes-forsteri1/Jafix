{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0423\\u0447\\u0451\\u0431\\u0430\\\\\\u0414\\u0438\\u043F\\u043B\\u043E\\u043C\\\\Jafix\\\\my-app\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const login = id => {\n    setIsAuthenticated(true);\n    setUserId(id);\n    navigate('/');\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUserId(null);\n    navigate('/login');\n  };\n  const register = () => {\n    setIsAuthenticated(true);\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout,\n      register,\n      userId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"vUqRPQOVJ/DO1UO33bBrDtBKxsQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","userId","setUserId","navigate","login","id","logout","register","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Учёба/Диплом/Jafix/my-app/src/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const login = (id) => {\r\n    setIsAuthenticated(true);\r\n    setUserId(id);\r\n    navigate('/');\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    setUserId(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  const register = () => {\r\n    setIsAuthenticated(true);\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, login, logout, register, userId }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,KAAK,GAAIC,EAAE,IAAK;IACpBL,kBAAkB,CAAC,IAAI,CAAC;IACxBE,SAAS,CAACG,EAAE,CAAC;IACbF,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBN,kBAAkB,CAAC,KAAK,CAAC;IACzBE,SAAS,CAAC,IAAI,CAAC;IACfC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACrBP,kBAAkB,CAAC,IAAI,CAAC;IACxBG,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEV,eAAe;MAAEK,KAAK;MAAEE,MAAM;MAAEC,QAAQ;MAAEN;IAAO,CAAE;IAAAJ,QAAA,EAC/EA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,GAAA,CA3BWF,YAAY;EAAA,QAGNN,WAAW;AAAA;AAAAwB,EAAA,GAHjBlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}